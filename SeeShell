#!/usr/bin/env python

#Written by Cru3 7/29/2016

#second import platform is cleaner
from sys import platform as operatingSystem
import platform
import os
import string
import re

#art

print ("""\
 ____ ____ ____    _____ _ _ ____ __   __
/ ___|  __|  __)  /  __) )( (  __| |  |  |
\___ \) _) ) _)   \___ ) __ () _)| |__|  |__
(____(____|____|  /____|_)(_(____)____/\____)

Local Privilege Escalation Framework 1.0
WARNING: This type of exploitation can and will cause permanent damage and loss of functional systems and data. Do not use this outside of practice labs or environments you are legally and ethically allowed to exploit. Your choices are your own and I am not responsible for your potential use of this script or the consequences thereof.
Written by Cru3, Appropriate Credit to Exploit Authors""")


#cross-platform system check and info.
#"in" statement is more flexible than == for os's like linux, linux2, and linux 3

cleanerText = "\n"
targetDetails = "Target host details as follows: OS, Hostname, Release, Version, Architecture."

if "linux" in operatingSystem:
        print cleanerText + targetDetails + cleanerText
	print platform.uname() #clean up
	version = platform.uname() 
	stringParse = re.match('(.*\s[0-9]+\.[0-9]+\.[0-9]+)..', version) #.*\s, thanks Maryland.
	versionString = stringParse.group(1)
	kernelVersionString = versionString.split (' ', 3)
	kernVersion = kernelVersionString[3]
	print cleanerText + "Current host kernel version is " + kernVersion + "Retrieving proper attack vector."
	

elif "darwin" in operatingSystem:
	print cleanerText + targetDetails + cleanerText
	print platform.uname()

elif "win" in operatingSystem:
	print cleanerText + targetDetails + cleanerText
	print platform.uname()

elif "linux" or "darwin" or "win" not in operatingSystem:
	print cleanerText + "Operating system not recognized. BSD support to be added later. No automated exploitation available. OS, Hostname, Version, Release, Architecture below." + cleanerText
	print platform.uname()
	
